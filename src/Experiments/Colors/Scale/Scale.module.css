.scale, .scale * {
    box-sizing: border-box;
}

.scale {
    --gradientBorderWidth: 0.1rem;
    --inputArrowHeight: 0.5rem;
    --inputBorderWidth: 0.5rem;
    --inputSize: 4rem;
    --linearGradient:
        oklch(0% var(--okc) var(--okh)),
        oklch(5% var(--okc) var(--okh)),
        oklch(10% var(--okc) var(--okh)),
        oklch(15% var(--okc) var(--okh)),
        oklch(20% var(--okc) var(--okh)),
        oklch(25% var(--okc) var(--okh)),
        oklch(30% var(--okc) var(--okh)),
        oklch(35% var(--okc) var(--okh)),
        oklch(40% var(--okc) var(--okh)),
        oklch(45% var(--okc) var(--okh)),
        oklch(50% var(--okc) var(--okh)),
        oklch(55% var(--okc) var(--okh)),
        oklch(60% var(--okc) var(--okh)),
        oklch(65% var(--okc) var(--okh)),
        oklch(70% var(--okc) var(--okh)),
        oklch(75% var(--okc) var(--okh)),
        oklch(80% var(--okc) var(--okh)),
        oklch(85% var(--okc) var(--okh)),
        oklch(90% var(--okc) var(--okh)),
        oklch(95% var(--okc) var(--okh)),
        oklch(100%  var(--okc) var(--okh));
    padding: 0 calc(var(--inputSize) / 2);
    padding-top: calc(var(--inputSize) + var(--inputArrowHeight));
    padding-bottom: 2.5rem
}

.gradientWrapper {
    background: linear-gradient(in oklch to left, var(--linearGradient));
    border-radius: 100rem;
    padding: var(--gradientBorderWidth);
}

.gradient {
    background: linear-gradient(in oklch to right, var(--linearGradient));
    border-radius: 100rem;
    height: 1rem;
    position: relative;
}

.input {
    border-radius: 0.5rem;
    border: var(--inputBorderWidth) solid white;
    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.5);
    height: var(--inputSize);
    left: calc(var(--okl) * 100%);
    position: absolute;
    top: 0;
    transform: translate(-50%, calc(-1 * (var(--inputSize) + var(--inputArrowHeight) + var(--gradientBorderWidth))));
    width: var(--inputSize);
}

.input::after {
    background: var(--color);
    border-color: white transparent transparent transparent;
    border-style: solid;
    border-width: var(--inputArrowHeight);
    box-sizing: border-box;
    content: '';
    height: calc(var(--inputArrowHeight) * 2);
    left: 50%;
    position: absolute;
    top: 100%;
    transform: translate(-0.5rem, 0.5rem);
    width: calc(var(--inputArrowHeight) * 2);
}

.spotWrapper {
    left: calc(var(--okl) * 100%);
    position: absolute;
    top: 100%;
    transform: translate(-50%, 0.5rem);
}

.spotWrapperApca {
    z-index: 1;
}

.spotWrapperWcag2 {
    margin-top: 1rem;
}

.spot {
    background: oklch(var(--okl) var(--okc) var(--okh));
    border-radius: 1rem;
    border: 1px solid white;
    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.5);
    height: 1rem;
    width: 1rem;
}

.spotTip {
    background: white;
    border-radius: 0.5rem;
    border: var(--inputBorderWidth) solid white;
    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.5);
    color: black;
    display: none;
    left: calc(var(--okl) * 100%);
    position: absolute;
    top: 100%;
    transform: translate(calc(-50% - var(--inputBorderWidth)));
}

.spot:hover .spotTip, .spotTip:hover {
    display: block;
    white-space: nowrap;
}